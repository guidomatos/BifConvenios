'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1820
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSetCuotasPendientes"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSetCuotasPendientes
    Inherits Global.System.Data.DataSet
    
    Private tableDatosDescuentoHeader As DatosDescuentoHeaderDataTable
    
    Private tableDatosDescuentoDetail As DatosDescuentoDetailDataTable
    
    Private relationDivision1 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DatosDescuentoHeader")) Is Nothing) Then
                MyBase.Tables.Add(New DatosDescuentoHeaderDataTable(ds.Tables("DatosDescuentoHeader")))
            End If
            If (Not (ds.Tables("DatosDescuentoDetail")) Is Nothing) Then
                MyBase.Tables.Add(New DatosDescuentoDetailDataTable(ds.Tables("DatosDescuentoDetail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DatosDescuentoHeader() As DatosDescuentoHeaderDataTable
        Get
            Return Me.tableDatosDescuentoHeader
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DatosDescuentoDetail() As DatosDescuentoDetailDataTable
        Get
            Return Me.tableDatosDescuentoDetail
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSetCuotasPendientes = CType(MyBase.Clone,DataSetCuotasPendientes)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("DatosDescuentoHeader")) Is Nothing) Then
                MyBase.Tables.Add(New DatosDescuentoHeaderDataTable(ds.Tables("DatosDescuentoHeader")))
            End If
            If (Not (ds.Tables("DatosDescuentoDetail")) Is Nothing) Then
                MyBase.Tables.Add(New DatosDescuentoDetailDataTable(ds.Tables("DatosDescuentoDetail")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDatosDescuentoHeader = CType(MyBase.Tables("DatosDescuentoHeader"),DatosDescuentoHeaderDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDatosDescuentoHeader) Is Nothing) Then
                Me.tableDatosDescuentoHeader.InitVars
            End If
        End If
        Me.tableDatosDescuentoDetail = CType(MyBase.Tables("DatosDescuentoDetail"),DatosDescuentoDetailDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDatosDescuentoDetail) Is Nothing) Then
                Me.tableDatosDescuentoDetail.InitVars
            End If
        End If
        Me.relationDivision1 = Me.Relations("Division1")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSetCuotasPendientes"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSetCuotasPendientes.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDatosDescuentoHeader = New DatosDescuentoHeaderDataTable
        MyBase.Tables.Add(Me.tableDatosDescuentoHeader)
        Me.tableDatosDescuentoDetail = New DatosDescuentoDetailDataTable
        MyBase.Tables.Add(Me.tableDatosDescuentoDetail)
        Me.relationDivision1 = New Global.System.Data.DataRelation("Division1", New Global.System.Data.DataColumn() {Me.tableDatosDescuentoHeader.DLACCColumn}, New Global.System.Data.DataColumn() {Me.tableDatosDescuentoDetail.DLACCColumn}, false)
        Me.Relations.Add(Me.relationDivision1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDatosDescuentoHeader() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDatosDescuentoDetail() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSetCuotasPendientes = New DataSetCuotasPendientes
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub DatosDescuentoHeaderRowChangeEventHandler(ByVal sender As Object, ByVal e As DatosDescuentoHeaderRowChangeEvent)
    
    Public Delegate Sub DatosDescuentoDetailRowChangeEventHandler(ByVal sender As Object, ByVal e As DatosDescuentoDetailRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DatosDescuentoHeaderDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnDLACC As Global.System.Data.DataColumn
        
        Private columnCUSNA1 As Global.System.Data.DataColumn
        
        Private columnDIRECCION As Global.System.Data.DataColumn
        
        Private columnCUSCTY As Global.System.Data.DataColumn
        
        Private columnCUSZPC As Global.System.Data.DataColumn
        
        Private columnBRNNUM As Global.System.Data.DataColumn
        
        Private columnBRNNME As Global.System.Data.DataColumn
        
        Private columnBRNADR As Global.System.Data.DataColumn
        
        Private columnBRNPHN As Global.System.Data.DataColumn
        
        Private columnDLNCC As Global.System.Data.DataColumn
        
        Private columnCIUDAG As Global.System.Data.DataColumn
        
        Private columnPROVAG As Global.System.Data.DataColumn
        
        Private columnDEPTAG As Global.System.Data.DataColumn
        
        Private columnHORAAG As Global.System.Data.DataColumn
        
        Private columnDATA As Global.System.Data.DataColumn
        
        Private columnCUSFNA As Global.System.Data.DataColumn
        
        Private columnCUSLN1 As Global.System.Data.DataColumn
        
        Private columnCUSLN2 As Global.System.Data.DataColumn
        
        Private columnCUSSEX As Global.System.Data.DataColumn
        
        Private columnSIGN1NAME As Global.System.Data.DataColumn
        
        Private columnSIGN2NAME As Global.System.Data.DataColumn
        
        Private columnSIGN1POSITION As Global.System.Data.DataColumn
        
        Private columnSIGN2POSITION As Global.System.Data.DataColumn
        
        Private columnSIGN1DATA As Global.System.Data.DataColumn
        
        Private columnSIGN2DATA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DatosDescuentoHeader"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DLACCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLACC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUSNA1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSNA1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIRECCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUSCTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSCTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUSZPCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSZPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BRNNUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRNNUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BRNNMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRNNME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BRNADRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRNADR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BRNPHNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRNPHN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DLNCCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLNCC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CIUDAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIUDAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PROVAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROVAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEPTAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPTAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HORAAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHORAAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUSFNAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSFNA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUSLN1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSLN1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUSLN2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSLN2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUSSEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSSEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIGN1NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGN1NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIGN2NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGN2NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIGN1POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGN1POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIGN2POSITIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGN2POSITION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIGN1DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGN1DATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIGN2DATAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGN2DATA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DatosDescuentoHeaderRow
            Get
                Return CType(Me.Rows(index),DatosDescuentoHeaderRow)
            End Get
        End Property
        
        Public Event DatosDescuentoHeaderRowChanging As DatosDescuentoHeaderRowChangeEventHandler
        
        Public Event DatosDescuentoHeaderRowChanged As DatosDescuentoHeaderRowChangeEventHandler
        
        Public Event DatosDescuentoHeaderRowDeleting As DatosDescuentoHeaderRowChangeEventHandler
        
        Public Event DatosDescuentoHeaderRowDeleted As DatosDescuentoHeaderRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDatosDescuentoHeaderRow(ByVal row As DatosDescuentoHeaderRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDatosDescuentoHeaderRow( _
                    ByVal DLACC As Decimal,  _
                    ByVal CUSNA1 As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal CUSCTY As String,  _
                    ByVal CUSZPC As String,  _
                    ByVal BRNNUM As Decimal,  _
                    ByVal BRNNME As String,  _
                    ByVal BRNADR As String,  _
                    ByVal BRNPHN As Decimal,  _
                    ByVal DLNCC As String,  _
                    ByVal CIUDAG As String,  _
                    ByVal PROVAG As String,  _
                    ByVal DEPTAG As String,  _
                    ByVal HORAAG As String,  _
                    ByVal DATA As String,  _
                    ByVal CUSFNA As String,  _
                    ByVal CUSLN1 As String,  _
                    ByVal CUSLN2 As String,  _
                    ByVal CUSSEX As String,  _
                    ByVal SIGN1NAME As String,  _
                    ByVal SIGN2NAME As String,  _
                    ByVal SIGN1POSITION As String,  _
                    ByVal SIGN2POSITION As String,  _
                    ByVal SIGN1DATA() As Byte,  _
                    ByVal SIGN2DATA() As Byte) As DatosDescuentoHeaderRow
            Dim rowDatosDescuentoHeaderRow As DatosDescuentoHeaderRow = CType(Me.NewRow,DatosDescuentoHeaderRow)
            Dim columnValuesArray() As Object = New Object() {DLACC, CUSNA1, DIRECCION, CUSCTY, CUSZPC, BRNNUM, BRNNME, BRNADR, BRNPHN, DLNCC, CIUDAG, PROVAG, DEPTAG, HORAAG, DATA, CUSFNA, CUSLN1, CUSLN2, CUSSEX, SIGN1NAME, SIGN2NAME, SIGN1POSITION, SIGN2POSITION, SIGN1DATA, SIGN2DATA}
            rowDatosDescuentoHeaderRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDatosDescuentoHeaderRow)
            Return rowDatosDescuentoHeaderRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DatosDescuentoHeaderDataTable = CType(MyBase.Clone,DatosDescuentoHeaderDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DatosDescuentoHeaderDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnDLACC = MyBase.Columns("DLACC")
            Me.columnCUSNA1 = MyBase.Columns("CUSNA1")
            Me.columnDIRECCION = MyBase.Columns("DIRECCION")
            Me.columnCUSCTY = MyBase.Columns("CUSCTY")
            Me.columnCUSZPC = MyBase.Columns("CUSZPC")
            Me.columnBRNNUM = MyBase.Columns("BRNNUM")
            Me.columnBRNNME = MyBase.Columns("BRNNME")
            Me.columnBRNADR = MyBase.Columns("BRNADR")
            Me.columnBRNPHN = MyBase.Columns("BRNPHN")
            Me.columnDLNCC = MyBase.Columns("DLNCC")
            Me.columnCIUDAG = MyBase.Columns("CIUDAG")
            Me.columnPROVAG = MyBase.Columns("PROVAG")
            Me.columnDEPTAG = MyBase.Columns("DEPTAG")
            Me.columnHORAAG = MyBase.Columns("HORAAG")
            Me.columnDATA = MyBase.Columns("DATA")
            Me.columnCUSFNA = MyBase.Columns("CUSFNA")
            Me.columnCUSLN1 = MyBase.Columns("CUSLN1")
            Me.columnCUSLN2 = MyBase.Columns("CUSLN2")
            Me.columnCUSSEX = MyBase.Columns("CUSSEX")
            Me.columnSIGN1NAME = MyBase.Columns("SIGN1NAME")
            Me.columnSIGN2NAME = MyBase.Columns("SIGN2NAME")
            Me.columnSIGN1POSITION = MyBase.Columns("SIGN1POSITION")
            Me.columnSIGN2POSITION = MyBase.Columns("SIGN2POSITION")
            Me.columnSIGN1DATA = MyBase.Columns("SIGN1DATA")
            Me.columnSIGN2DATA = MyBase.Columns("SIGN2DATA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnDLACC = New Global.System.Data.DataColumn("DLACC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLACC)
            Me.columnCUSNA1 = New Global.System.Data.DataColumn("CUSNA1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSNA1)
            Me.columnDIRECCION = New Global.System.Data.DataColumn("DIRECCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION)
            Me.columnCUSCTY = New Global.System.Data.DataColumn("CUSCTY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSCTY)
            Me.columnCUSZPC = New Global.System.Data.DataColumn("CUSZPC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSZPC)
            Me.columnBRNNUM = New Global.System.Data.DataColumn("BRNNUM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRNNUM)
            Me.columnBRNNME = New Global.System.Data.DataColumn("BRNNME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRNNME)
            Me.columnBRNADR = New Global.System.Data.DataColumn("BRNADR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRNADR)
            Me.columnBRNPHN = New Global.System.Data.DataColumn("BRNPHN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRNPHN)
            Me.columnDLNCC = New Global.System.Data.DataColumn("DLNCC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLNCC)
            Me.columnCIUDAG = New Global.System.Data.DataColumn("CIUDAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIUDAG)
            Me.columnPROVAG = New Global.System.Data.DataColumn("PROVAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROVAG)
            Me.columnDEPTAG = New Global.System.Data.DataColumn("DEPTAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPTAG)
            Me.columnHORAAG = New Global.System.Data.DataColumn("HORAAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHORAAG)
            Me.columnDATA = New Global.System.Data.DataColumn("DATA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATA)
            Me.columnCUSFNA = New Global.System.Data.DataColumn("CUSFNA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSFNA)
            Me.columnCUSLN1 = New Global.System.Data.DataColumn("CUSLN1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSLN1)
            Me.columnCUSLN2 = New Global.System.Data.DataColumn("CUSLN2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSLN2)
            Me.columnCUSSEX = New Global.System.Data.DataColumn("CUSSEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSSEX)
            Me.columnSIGN1NAME = New Global.System.Data.DataColumn("SIGN1NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGN1NAME)
            Me.columnSIGN2NAME = New Global.System.Data.DataColumn("SIGN2NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGN2NAME)
            Me.columnSIGN1POSITION = New Global.System.Data.DataColumn("SIGN1POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGN1POSITION)
            Me.columnSIGN2POSITION = New Global.System.Data.DataColumn("SIGN2POSITION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGN2POSITION)
            Me.columnSIGN1DATA = New Global.System.Data.DataColumn("SIGN1DATA", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGN1DATA)
            Me.columnSIGN2DATA = New Global.System.Data.DataColumn("SIGN2DATA", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGN2DATA)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDatosDescuentoHeaderRow() As DatosDescuentoHeaderRow
            Return CType(Me.NewRow,DatosDescuentoHeaderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DatosDescuentoHeaderRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DatosDescuentoHeaderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DatosDescuentoHeaderRowChangedEvent) Is Nothing) Then
                RaiseEvent DatosDescuentoHeaderRowChanged(Me, New DatosDescuentoHeaderRowChangeEvent(CType(e.Row,DatosDescuentoHeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DatosDescuentoHeaderRowChangingEvent) Is Nothing) Then
                RaiseEvent DatosDescuentoHeaderRowChanging(Me, New DatosDescuentoHeaderRowChangeEvent(CType(e.Row,DatosDescuentoHeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DatosDescuentoHeaderRowDeletedEvent) Is Nothing) Then
                RaiseEvent DatosDescuentoHeaderRowDeleted(Me, New DatosDescuentoHeaderRowChangeEvent(CType(e.Row,DatosDescuentoHeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DatosDescuentoHeaderRowDeletingEvent) Is Nothing) Then
                RaiseEvent DatosDescuentoHeaderRowDeleting(Me, New DatosDescuentoHeaderRowChangeEvent(CType(e.Row,DatosDescuentoHeaderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDatosDescuentoHeaderRow(ByVal row As DatosDescuentoHeaderRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DataSetCuotasPendientes = New DataSetCuotasPendientes
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DatosDescuentoHeaderDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DatosDescuentoDetailDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnDLACC As Global.System.Data.DataColumn
        
        Private columnDLVCA As Global.System.Data.DataColumn
        
        Private columnDLVCM As Global.System.Data.DataColumn
        
        Private columnDLVCD As Global.System.Data.DataColumn
        
        Private columnDLCCY As Global.System.Data.DataColumn
        
        Private columnDLEIC As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DatosDescuentoDetail"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DLACCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLACC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DLVCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLVCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DLVCMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLVCM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DLVCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLVCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DLCCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLCCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DLEICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDLEIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DatosDescuentoDetailRow
            Get
                Return CType(Me.Rows(index),DatosDescuentoDetailRow)
            End Get
        End Property
        
        Public Event DatosDescuentoDetailRowChanging As DatosDescuentoDetailRowChangeEventHandler
        
        Public Event DatosDescuentoDetailRowChanged As DatosDescuentoDetailRowChangeEventHandler
        
        Public Event DatosDescuentoDetailRowDeleting As DatosDescuentoDetailRowChangeEventHandler
        
        Public Event DatosDescuentoDetailRowDeleted As DatosDescuentoDetailRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDatosDescuentoDetailRow(ByVal row As DatosDescuentoDetailRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDatosDescuentoDetailRow(ByVal parentDatosDescuentoHeaderRowByDivision1 As DatosDescuentoHeaderRow, ByVal DLVCA As Decimal, ByVal DLVCM As Decimal, ByVal DLVCD As Decimal, ByVal DLCCY As String, ByVal DLEIC As Decimal) As DatosDescuentoDetailRow
            Dim rowDatosDescuentoDetailRow As DatosDescuentoDetailRow = CType(Me.NewRow,DatosDescuentoDetailRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DLVCA, DLVCM, DLVCD, DLCCY, DLEIC}
            If (Not (parentDatosDescuentoHeaderRowByDivision1) Is Nothing) Then
                columnValuesArray(0) = parentDatosDescuentoHeaderRowByDivision1(0)
            End If
            rowDatosDescuentoDetailRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDatosDescuentoDetailRow)
            Return rowDatosDescuentoDetailRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DatosDescuentoDetailDataTable = CType(MyBase.Clone,DatosDescuentoDetailDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DatosDescuentoDetailDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnDLACC = MyBase.Columns("DLACC")
            Me.columnDLVCA = MyBase.Columns("DLVCA")
            Me.columnDLVCM = MyBase.Columns("DLVCM")
            Me.columnDLVCD = MyBase.Columns("DLVCD")
            Me.columnDLCCY = MyBase.Columns("DLCCY")
            Me.columnDLEIC = MyBase.Columns("DLEIC")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnDLACC = New Global.System.Data.DataColumn("DLACC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLACC)
            Me.columnDLVCA = New Global.System.Data.DataColumn("DLVCA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLVCA)
            Me.columnDLVCM = New Global.System.Data.DataColumn("DLVCM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLVCM)
            Me.columnDLVCD = New Global.System.Data.DataColumn("DLVCD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLVCD)
            Me.columnDLCCY = New Global.System.Data.DataColumn("DLCCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLCCY)
            Me.columnDLEIC = New Global.System.Data.DataColumn("DLEIC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDLEIC)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDatosDescuentoDetailRow() As DatosDescuentoDetailRow
            Return CType(Me.NewRow,DatosDescuentoDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DatosDescuentoDetailRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DatosDescuentoDetailRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DatosDescuentoDetailRowChangedEvent) Is Nothing) Then
                RaiseEvent DatosDescuentoDetailRowChanged(Me, New DatosDescuentoDetailRowChangeEvent(CType(e.Row,DatosDescuentoDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DatosDescuentoDetailRowChangingEvent) Is Nothing) Then
                RaiseEvent DatosDescuentoDetailRowChanging(Me, New DatosDescuentoDetailRowChangeEvent(CType(e.Row,DatosDescuentoDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DatosDescuentoDetailRowDeletedEvent) Is Nothing) Then
                RaiseEvent DatosDescuentoDetailRowDeleted(Me, New DatosDescuentoDetailRowChangeEvent(CType(e.Row,DatosDescuentoDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DatosDescuentoDetailRowDeletingEvent) Is Nothing) Then
                RaiseEvent DatosDescuentoDetailRowDeleting(Me, New DatosDescuentoDetailRowChangeEvent(CType(e.Row,DatosDescuentoDetailRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDatosDescuentoDetailRow(ByVal row As DatosDescuentoDetailRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DataSetCuotasPendientes = New DataSetCuotasPendientes
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DatosDescuentoDetailDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DatosDescuentoHeaderRow
        Inherits Global.System.Data.DataRow
        
        Private tableDatosDescuentoHeader As DatosDescuentoHeaderDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDatosDescuentoHeader = CType(Me.Table,DatosDescuentoHeaderDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DLACC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.DLACCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DLACC' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.DLACCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUSNA1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.CUSNA1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSNA1' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.CUSNA1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIRECCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.DIRECCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIRECCION' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.DIRECCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUSCTY() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.CUSCTYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSCTY' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.CUSCTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUSZPC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.CUSZPCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSZPC' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.CUSZPCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BRNNUM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.BRNNUMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRNNUM' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.BRNNUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BRNNME() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.BRNNMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRNNME' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.BRNNMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BRNADR() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.BRNADRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRNADR' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.BRNADRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BRNPHN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.BRNPHNColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRNPHN' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.BRNPHNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DLNCC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.DLNCCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DLNCC' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.DLNCCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CIUDAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.CIUDAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIUDAG' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.CIUDAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PROVAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.PROVAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROVAG' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.PROVAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEPTAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.DEPTAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPTAG' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.DEPTAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HORAAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.HORAAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HORAAG' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.HORAAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DATA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.DATAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATA' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUSFNA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.CUSFNAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSFNA' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.CUSFNAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUSLN1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.CUSLN1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSLN1' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.CUSLN1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUSLN2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.CUSLN2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSLN2' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.CUSLN2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUSSEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.CUSSEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSSEX' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.CUSSEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIGN1NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.SIGN1NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGN1NAME' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.SIGN1NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIGN2NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.SIGN2NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGN2NAME' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.SIGN2NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIGN1POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.SIGN1POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGN1POSITION' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.SIGN1POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIGN2POSITION() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.SIGN2POSITIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGN2POSITION' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.SIGN2POSITIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIGN1DATA() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.SIGN1DATAColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGN1DATA' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.SIGN1DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIGN2DATA() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoHeader.SIGN2DATAColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGN2DATA' in table 'DatosDescuentoHeader' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoHeader.SIGN2DATAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDLACCNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.DLACCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDLACCNull()
            Me(Me.tableDatosDescuentoHeader.DLACCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCUSNA1Null() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.CUSNA1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCUSNA1Null()
            Me(Me.tableDatosDescuentoHeader.CUSNA1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIRECCIONNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.DIRECCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIRECCIONNull()
            Me(Me.tableDatosDescuentoHeader.DIRECCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCUSCTYNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.CUSCTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCUSCTYNull()
            Me(Me.tableDatosDescuentoHeader.CUSCTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCUSZPCNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.CUSZPCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCUSZPCNull()
            Me(Me.tableDatosDescuentoHeader.CUSZPCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBRNNUMNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.BRNNUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBRNNUMNull()
            Me(Me.tableDatosDescuentoHeader.BRNNUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBRNNMENull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.BRNNMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBRNNMENull()
            Me(Me.tableDatosDescuentoHeader.BRNNMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBRNADRNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.BRNADRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBRNADRNull()
            Me(Me.tableDatosDescuentoHeader.BRNADRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBRNPHNNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.BRNPHNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBRNPHNNull()
            Me(Me.tableDatosDescuentoHeader.BRNPHNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDLNCCNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.DLNCCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDLNCCNull()
            Me(Me.tableDatosDescuentoHeader.DLNCCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCIUDAGNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.CIUDAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCIUDAGNull()
            Me(Me.tableDatosDescuentoHeader.CIUDAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPROVAGNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.PROVAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPROVAGNull()
            Me(Me.tableDatosDescuentoHeader.PROVAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEPTAGNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.DEPTAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEPTAGNull()
            Me(Me.tableDatosDescuentoHeader.DEPTAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHORAAGNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.HORAAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHORAAGNull()
            Me(Me.tableDatosDescuentoHeader.HORAAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDATANull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.DATAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDATANull()
            Me(Me.tableDatosDescuentoHeader.DATAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCUSFNANull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.CUSFNAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCUSFNANull()
            Me(Me.tableDatosDescuentoHeader.CUSFNAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCUSLN1Null() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.CUSLN1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCUSLN1Null()
            Me(Me.tableDatosDescuentoHeader.CUSLN1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCUSLN2Null() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.CUSLN2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCUSLN2Null()
            Me(Me.tableDatosDescuentoHeader.CUSLN2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCUSSEXNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.CUSSEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCUSSEXNull()
            Me(Me.tableDatosDescuentoHeader.CUSSEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIGN1NAMENull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.SIGN1NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIGN1NAMENull()
            Me(Me.tableDatosDescuentoHeader.SIGN1NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIGN2NAMENull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.SIGN2NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIGN2NAMENull()
            Me(Me.tableDatosDescuentoHeader.SIGN2NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIGN1POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.SIGN1POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIGN1POSITIONNull()
            Me(Me.tableDatosDescuentoHeader.SIGN1POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIGN2POSITIONNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.SIGN2POSITIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIGN2POSITIONNull()
            Me(Me.tableDatosDescuentoHeader.SIGN2POSITIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIGN1DATANull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.SIGN1DATAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIGN1DATANull()
            Me(Me.tableDatosDescuentoHeader.SIGN1DATAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIGN2DATANull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoHeader.SIGN2DATAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIGN2DATANull()
            Me(Me.tableDatosDescuentoHeader.SIGN2DATAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetDatosDescuentoDetailRows() As DatosDescuentoDetailRow()
            If (Me.Table.ChildRelations("Division1") Is Nothing) Then
                Return New DatosDescuentoDetailRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Division1")),DatosDescuentoDetailRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DatosDescuentoDetailRow
        Inherits Global.System.Data.DataRow
        
        Private tableDatosDescuentoDetail As DatosDescuentoDetailDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDatosDescuentoDetail = CType(Me.Table,DatosDescuentoDetailDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DLACC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoDetail.DLACCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DLACC' in table 'DatosDescuentoDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoDetail.DLACCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DLVCA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoDetail.DLVCAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DLVCA' in table 'DatosDescuentoDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoDetail.DLVCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DLVCM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoDetail.DLVCMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DLVCM' in table 'DatosDescuentoDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoDetail.DLVCMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DLVCD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoDetail.DLVCDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DLVCD' in table 'DatosDescuentoDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoDetail.DLVCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DLCCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoDetail.DLCCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DLCCY' in table 'DatosDescuentoDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoDetail.DLCCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DLEIC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDatosDescuentoDetail.DLEICColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DLEIC' in table 'DatosDescuentoDetail' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDatosDescuentoDetail.DLEICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DatosDescuentoHeaderRow() As DatosDescuentoHeaderRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Division1")),DatosDescuentoHeaderRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Division1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDLACCNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoDetail.DLACCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDLACCNull()
            Me(Me.tableDatosDescuentoDetail.DLACCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDLVCANull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoDetail.DLVCAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDLVCANull()
            Me(Me.tableDatosDescuentoDetail.DLVCAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDLVCMNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoDetail.DLVCMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDLVCMNull()
            Me(Me.tableDatosDescuentoDetail.DLVCMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDLVCDNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoDetail.DLVCDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDLVCDNull()
            Me(Me.tableDatosDescuentoDetail.DLVCDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDLCCYNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoDetail.DLCCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDLCCYNull()
            Me(Me.tableDatosDescuentoDetail.DLCCYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDLEICNull() As Boolean
            Return Me.IsNull(Me.tableDatosDescuentoDetail.DLEICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDLEICNull()
            Me(Me.tableDatosDescuentoDetail.DLEICColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DatosDescuentoHeaderRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DatosDescuentoHeaderRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DatosDescuentoHeaderRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DatosDescuentoHeaderRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DatosDescuentoDetailRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DatosDescuentoDetailRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DatosDescuentoDetailRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DatosDescuentoDetailRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
